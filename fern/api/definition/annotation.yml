# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
  label: label.yml

services:
  http:
    AnnotationsService:
      auth: true
      base-path: /annotations
      endpoints:
        getAll:
          path: ""
          method: GET
          docs: |-
            Get a page of annotations data for a given project.
            This endpoint works like `/tasks`, but you must provide
            `page` and `size` parameters. Up to `size` records
            will be returned, starting from `page` * `size`.
            user relates to user.full_name.
          display-name: Get Annotations
          request:
            name: GetAnnotationsRequest
            query-parameters:
              project_id: integer
              size: optional<integer>
              page: optional<integer>
              complete: optional<boolean>
              flagged: optional<boolean>
              reviewed: optional<boolean>
              user: optional<string>
              keywords: optional<string>
              task_id: optional<integer>

        create:
          path: ""
          method: POST
          docs: Create an annotation
          display-name: Create Annotation
          request:
            name: CreateAnnotationRequest
            body:
              properties:
                task_id: integer
                external_id: optional<string>
                label_id: optional<string>
                start: optional<integer>
                end: optional<integer>
                text: optional<string>
                strength: optional<double>

        upsert:
          path: /{annotation_id}
          method: PUT
          docs: |-
            Create or update an annotation.
            This endpoint is only used for single-label classification.
          display-name: Upsert Annotation
          path-parameters:
            annotation_id: string
          request:
            name: UpsertAnnotationRequest
            body:
              properties:
                task_id: integer
                label_id: optional<string>
                start: optional<integer>
                end: optional<integer>
                text: optional<string>
                strength: optional<double>

        delete:
          path: /{annotation_id}
          method: DELETE
          docs: Delete a given annotation
          display-name: Delete Annotation
          path-parameters:
            annotation_id: string

        update:
          path: /{annotation_id}
          method: PATCH
          docs: Update a given annotation.
          display-name: Update Annotation
          path-parameters:
            annotation_id: string
          request:
            name: UpdateAnnotationRequest
            body:
              properties:
                reviewed: optional<boolean>
                start: optional<integer>
                end: optional<integer>
                label_id: optional<string>
                strength: optional<double>
                text: optional<string>
          response: Annotation

types:
  Annotation:
    docs: An instance of a user-provided annotation
    properties:
      id: string
      external_id: string
      confidence: optional<double>
      user: AnnotationUserResponse
      task: AnnotationTaskResponse
      start: optional<integer>
      end: optional<integer>
      text: optional<string>
      strength: optional<double>
      label_id: string
      label: label.Label
      result_type: string
      reviewed: optional<boolean>

  AnnotationUserResponse:
    docs: An instance of the user who made an annotation
    properties:
      id: integer
      username: string
      full_name: optional<string>
      email_address: string

  AnnotationTaskResponse:
    docs: An instance of a task the annotation was created for
    properties:
      id: integer
      url: optional<string>
